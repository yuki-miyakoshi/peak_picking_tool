name: Build and Release

on: [push]

jobs:
  build-and-tag:
    runs-on: windows-latest

    steps:
    - name: コードをチェックアウト
      uses: actions/checkout@v2

    - name: Gitの設定
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: バージョンをバンプしてタグ付け
      id: bump_version
      shell: pwsh
      run: |
        $NEW_TAG = (Get-Date -Format "yyyyMMddHHmmss")
        "NEW_TAG=$NEW_TAG" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        git tag $NEW_TAG
        git push origin $NEW_TAG

    - name: Pythonをセットアップ
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: 依存関係のキャッシュを復元
      uses: actions/cache@v2
      with:
        path: |
          ~\AppData\Local\pip\Cache
          ~\AppData\Local\pip\http
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 依存関係をインストール
      run: |
        python -m pip install --upgrade pip
        pip install pipreqs
        if (!(Test-Path "requirements.txt")) {
          Write-Host "requirements.txt が存在しないため生成します。"
          pipreqs . --force
        }
        pip install -r requirements.txt

    - name: pyinstaller をインストール
      run: pip install pyinstaller

    - name: 実行可能ファイルをビルド
      run: pyinstaller --onefile src/main.py

    - name: ファイル名を変更
      shell: pwsh
      run: |
        $REPO_NAME = (git rev-parse --show-toplevel | Split-Path -Leaf)
        Rename-Item -Path "dist/main.exe" -NewName "$REPO_NAME.exe"

    - name: 自己署名証明書を作成
      shell: pwsh
      env:
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      run: |
        $cert = New-SelfSignedCertificate -Type CodeSigningCert -Subject "CN=YourName" -CertStoreLocation "Cert:\CurrentUser\My"
        Export-PfxCertificate -Cert "Cert:\CurrentUser\My\$($cert.Thumbprint)" -FilePath "cert.pfx" -Password (ConvertTo-SecureString -String $env:CERTIFICATE_PASSWORD -Force -AsPlainText)

    - name: 実行ファイルに署名
      shell: pwsh
      env:
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      run: |
        Start-Process -FilePath "signtool.exe" -ArgumentList "sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /a /f cert.pfx /p $env:CERTIFICATE_PASSWORD dist/$REPO_NAME.exe" -NoNewWindow -Wait

    - name: GitHubリリースを作成
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_TAG }}
        release_name: Release ${{ env.NEW_TAG }}
        draft: false
        prerelease: false

    - name: リリースアセットをアップロード
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/${{ github.event.repository.name }}.exe
        asset_name: ${{ github.event.repository.name }}.exe
        asset_content_type: application/octet-stream
